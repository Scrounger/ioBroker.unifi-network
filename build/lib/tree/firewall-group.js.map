{
  "version": 3,
  "sources": ["../../../src/lib/tree/firewall-group.ts"],
  "sourcesContent": ["import { myCommonState, myCommoneChannelObject, myCommonChannelArray, myCache, myNetworkClient } from \"../myTypes.js\";\r\nimport * as myHelper from '../helper.js';\r\n\r\nexport namespace firewallGroup {\r\n    let keys: string[] = undefined;\r\n\r\n    export const idChannel = 'firewall.groups';\r\n\r\n    export function get(): { [key: string]: myCommonState | myCommoneChannelObject | myCommonChannelArray } {\r\n        return {\r\n            name: {\r\n                iobType: 'string',\r\n                name: 'name',\r\n                write: true,\r\n                required: true\r\n            },\r\n            group_members: {\r\n                iobType: 'string',\r\n                write: true,\r\n                name: 'group members',\r\n                readVal(val: string, adapter: ioBroker.Adapter, cache: myCache, deviceOrClient: myNetworkClient, id: string): ioBroker.StateValue {\r\n                    return JSON.stringify(val);\r\n                }\r\n            },\r\n            group_type: {\r\n                iobType: 'string',\r\n                name: 'type',\r\n                states: {\r\n                    \"port-group\": 'Port',\r\n                    \"address-group\": 'IPv4',\r\n                    \"ipv6-address-group\": 'IPv6'\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export function getKeys(): string[] {\r\n        if (keys === undefined) {\r\n            keys = myHelper.getAllKeysOfTreeDefinition(get());\r\n        }\r\n\r\n        return keys\r\n    }\r\n\r\n    export function getStateIDs(): string[] {\r\n        return myHelper.getAllIdsOfTreeDefinition(get());\r\n    }\r\n}"],
  "mappings": "AACA,YAAY,cAAc;AAEnB,IAAU;AAAA,CAAV,CAAUA,mBAAV;AACH,MAAI,OAAiB;AAEd,EAAMA,eAAA,YAAY;AAElB,WAAS,MAAwF;AACpG,WAAO;AAAA,MACH,MAAM;AAAA,QACF,SAAS;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,QACP,UAAU;AAAA,MACd;AAAA,MACA,eAAe;AAAA,QACX,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,QAAQ,KAAa,SAA2B,OAAgB,gBAAiC,IAAiC;AAC9H,iBAAO,KAAK,UAAU,GAAG;AAAA,QAC7B;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR,SAAS;AAAA,QACT,MAAM;AAAA,QACN,QAAQ;AAAA,UACJ,cAAc;AAAA,UACd,iBAAiB;AAAA,UACjB,sBAAsB;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AA1BO,EAAAA,eAAS;AA4BT,WAAS,UAAoB;AAChC,QAAI,SAAS,QAAW;AACpB,aAAO,SAAS,2BAA2B,IAAI,CAAC;AAAA,IACpD;AAEA,WAAO;AAAA,EACX;AANO,EAAAA,eAAS;AAQT,WAAS,cAAwB;AACpC,WAAO,SAAS,0BAA0B,IAAI,CAAC;AAAA,EACnD;AAFO,EAAAA,eAAS;AAAA,GAzCH;",
  "names": ["firewallGroup"]
}
